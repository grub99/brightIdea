// const User = require("../models/user.models");
// const bcrypt = require("bcrypt");
// const jwt = require("jsonwebtoken");

// //export an object that is full of methods
// //standard req res anonymous function
// module.exports = {
//     //create user: save method triggers bycrypt hashing in model file
//     //hashing is PRE save
//     register: (req, res) => { 
//         //put req.body in temp variable called user
//         const user = new User(req.body);
//         //check for validation
//         user
//         //hashes password //use methods
//             .save()
//             .then(() => {
//                 res.json({ msg: "success!", user: user });
//             })
//             .catch((err) => res.status(400).json(err));
//     },
//     login(req, res) {
//         User.findOne({ email: req.body.email })
//             .then(user => {
//                 if ( user === null ) {
//                     res.status(400).json({ msg: "No users with that email" });
//                 } else {
//                     bcrypt
//                     //Data sent the not encrypted password / encrypted string
//                         .compare(req.body.password, user.password)
//                         .then((passwordIsValid) => {
//                             let userData = {
//                                 username: user.userName,
//                                 alias: user.alias,
//                                 email: user.email,
//                             };
//                             if (passwordIsValid) {
                                ////INSTEAD OF USETOKEN 
//                                 res.cookie("userData", JSON.stringify(userData));
//                                 res.json({
//                                     msg: "success!",
//                                     userData,
//                                 });
//                             } else {
//                                 res
//                                 .status(400)
//                                 .json({ msg: "Issue logging in please try again" })
//                             }
//                         })
//                         .catch((err) => 
//                             res.status(400).json({ msg: "Password is invalid" })
//                         ); 
//                 }
//             })
//             .catch((err) => res.json(err));
//     },
//     logout(req, res) {
//         res
//             .cookie("userToken", jwt.sign({_id: ""}, process.env.JWT_SECRET), {
//                 httpOnly: true,
//                 maxAge: 0,
//             })
//             .json({ msg: "ok" });
//     },
//     getLoggedInUser(req, res) {
//         const decodedJWT = jwt.decode(req.cookies.userToken, { complete: true});
//         User.findById(decodedJWT.payload._id)
//             .then((user) => res.json(user))
//             .catch((err) => res.json(err));
//     },
// }

